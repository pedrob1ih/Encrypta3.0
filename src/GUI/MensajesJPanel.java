package GUI;

import Modelo.Encryptacion;
import Modelo.Fichero;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;


public class MensajesJPanel extends javax.swing.JPanel {

    private Encryptacion e;
    private Fichero f;
    
    public MensajesJPanel(Encryptacion e,Fichero f) {
        initComponents();
        TAEntradaUsuarioj.setLineWrap(true);
        TASalida.setLineWrap(true);
        this.e= e;
        this.f=f;
    }
    
    public void mostrar(){
        try {
            this.TASalida.setText("");
            this.TAEntradaUsuarioj.setText("");
            this.setVisible(true);
            if(!(this.e.exportPrivateKey().equals(f.getPrivateKey())))
                e.importPrivateKey(f.getPrivateKey());
        } catch (Exception ex) {
            Logger.getLogger(MensajesJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        copiarEntrada = new javax.swing.JButton();
        pegarEntrada = new javax.swing.JButton();
        cargarFichero = new javax.swing.JButton();
        bGuardarEnFichero = new javax.swing.JButton();
        jScrollPane0 = new javax.swing.JScrollPane();
        TAEntradaUsuarioj = new javax.swing.JTextArea();
        convertirJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TASalida = new javax.swing.JTextArea();
        copiarEntrada1 = new javax.swing.JButton();
        pegarEntrada1 = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(700, 500));
        setPreferredSize(new java.awt.Dimension(650, 480));

        copiarEntrada.setText("Copy");
        copiarEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copiarEntradaActionPerformed(evt);
            }
        });

        pegarEntrada.setText("Paste");
        pegarEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pegarEntradaActionPerformed(evt);
            }
        });

        cargarFichero.setText("Load file");

        bGuardarEnFichero.setText("Save file");
        bGuardarEnFichero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGuardarEnFicheroActionPerformed(evt);
            }
        });

        TAEntradaUsuarioj.setColumns(100);
        TAEntradaUsuarioj.setRows(5);
        TAEntradaUsuarioj.setWrapStyleWord(true);
        TAEntradaUsuarioj.setMinimumSize(new java.awt.Dimension(5, 5));
        jScrollPane0.setViewportView(TAEntradaUsuarioj);

        convertirJButton.setText("Cypher");
        convertirJButton.setMinimumSize(new java.awt.Dimension(5, 5));
        convertirJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertirJButtonActionPerformed(evt);
            }
        });

        TASalida.setColumns(20);
        TASalida.setRows(5);
        TASalida.setWrapStyleWord(true);
        TASalida.setMinimumSize(new java.awt.Dimension(5, 5));
        jScrollPane1.setViewportView(TASalida);

        copiarEntrada1.setText("Copy");
        copiarEntrada1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copiarEntrada1ActionPerformed(evt);
            }
        });

        pegarEntrada1.setText("paste");
        pegarEntrada1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pegarEntrada1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane0, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(copiarEntrada)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pegarEntrada)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cargarFichero)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bGuardarEnFichero))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(copiarEntrada1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pegarEntrada1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(convertirJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bGuardarEnFichero)
                    .addComponent(cargarFichero)
                    .addComponent(copiarEntrada)
                    .addComponent(pegarEntrada))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane0, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(convertirJButton, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(pegarEntrada1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(copiarEntrada1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void convertirJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertirJButtonActionPerformed
        if(!(this.TAEntradaUsuarioj.getText().equals(""))){
            if (e.isEncripy(this.TAEntradaUsuarioj.getText())) { //si esta encriptado lo desencripta
            try{
                String desEncriptado=e.unEncripta(this.TAEntradaUsuarioj.getText());
                this.TASalida.setText(desEncriptado);
            }
            catch(Exception eo){
                this.TASalida.setText("El codigo no esta completo");
                eo.printStackTrace();
            }
        }
        else{ // si no lo esta, lo encripta
            String encriptado=e.encripta(this.TAEntradaUsuarioj.getText());
            this.TASalida.setText(encriptado);
            
        }
        }
        
    }//GEN-LAST:event_convertirJButtonActionPerformed

    private void bGuardarEnFicheroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGuardarEnFicheroActionPerformed
        f.saveFile("FicheroDePrueva", this.TASalida.getText());
    }//GEN-LAST:event_bGuardarEnFicheroActionPerformed

    private void copiarEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copiarEntradaActionPerformed
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        StringSelection data = new StringSelection(this.TAEntradaUsuarioj.getText());
        clipboard.setContents(data, data);
    }//GEN-LAST:event_copiarEntradaActionPerformed

    private void copiarEntrada1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copiarEntrada1ActionPerformed
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        StringSelection data = new StringSelection(this.TASalida.getText());
        clipboard.setContents(data, data);
    }//GEN-LAST:event_copiarEntrada1ActionPerformed

    private void pegarEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pegarEntradaActionPerformed
        Clipboard portapapeles=Toolkit.getDefaultToolkit().getSystemClipboard();
        Transferable datos=portapapeles.getContents(null);
        if(datos.isDataFlavorSupported(DataFlavor.stringFlavor)){
            try {
                TAEntradaUsuarioj.setText(""+datos.getTransferData(DataFlavor.stringFlavor));
            } catch (UnsupportedFlavorException e) {
             e.printStackTrace();
            } catch (IOException e) {

             e.printStackTrace();
            }
        }
    }//GEN-LAST:event_pegarEntradaActionPerformed

    private void pegarEntrada1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pegarEntrada1ActionPerformed
        Clipboard portapapeles=Toolkit.getDefaultToolkit().getSystemClipboard();
        Transferable datos=portapapeles.getContents(null);
        if(datos.isDataFlavorSupported(DataFlavor.stringFlavor)){
            try {
                TASalida.setText(""+datos.getTransferData(DataFlavor.stringFlavor));
            } catch (UnsupportedFlavorException e) {
             e.printStackTrace();
            } catch (IOException e) {

             e.printStackTrace();
            }
        }
    }//GEN-LAST:event_pegarEntrada1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea TAEntradaUsuarioj;
    private javax.swing.JTextArea TASalida;
    private javax.swing.JButton bGuardarEnFichero;
    private javax.swing.JButton cargarFichero;
    private javax.swing.JButton convertirJButton;
    private javax.swing.JButton copiarEntrada;
    private javax.swing.JButton copiarEntrada1;
    private javax.swing.JScrollPane jScrollPane0;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton pegarEntrada;
    private javax.swing.JButton pegarEntrada1;
    // End of variables declaration//GEN-END:variables
}
